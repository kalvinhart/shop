{"version":3,"file":"static/js/71.202718da.chunk.js","mappings":"kOAEaA,EAAuBC,EAAAA,GAAAA,IAAH,+K,SCgBjC,EAboB,WAClB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAACH,EAAD,YACE,SAAC,KAAD,+CACA,SAAC,IAAD,CAAQI,KAAK,UAAUC,QAAS,kBAAMH,EAAS,MAA/C,mC,2DCLOI,EAAwBL,EAAAA,GAAAA,IAAH,0GAOrBM,EAAsBN,EAAAA,GAAAA,IAAH,+KAKEO,EAAAA,EAAAA,OAKrBC,EAA+BR,EAAAA,GAAAA,IAAH,6JAKPO,EAAAA,EAAAA,OAKrBE,EAA4BT,EAAAA,GAAAA,IAAH,qEAKzBU,EAA0BV,EAAAA,GAAAA,IAAH,6IAG9BW,EAAAA,IASOC,EAA2BZ,EAAAA,GAAAA,IAAH,osBASHO,EAAAA,EAAAA,MAa5BM,EAAAA,GAI8BN,EAAAA,EAAAA,MAM9BO,EAAAA,EAG8BP,EAAAA,EAAAA,O,SCJpC,EA5DiB,SAAC,GAAc,IAAZQ,EAAW,EAAXA,KACZC,GAAWC,EAAAA,EAAAA,MACTC,EAAuDH,EAAvDG,GAAIC,EAAmDJ,EAAnDI,KAAMC,EAA6CL,EAA7CK,MAAOC,EAAsCN,EAAtCM,SAAUC,EAA4BP,EAA5BO,KAAMC,EAAsBR,EAAtBQ,MAAOC,EAAeT,EAAfS,IAAKC,EAAUV,EAAVU,MAUrD,OACE,UAACpB,EAAD,YACE,SAAC,KAAD,CAAMqB,GAAE,mBAAcR,GAAtB,UACE,SAACZ,EAAD,CAAqBqB,IAAKN,EAAUO,IAAKT,OAG3C,UAACX,EAAD,YACE,UAACC,EAAD,YACE,SAAC,KAAD,CAAMiB,GAAE,mBAAcR,GAAtB,UACE,SAAC,EAAAW,GAAD,UAAKV,MAGNC,IACC,UAACV,EAAD,YACE,SAAC,KAAD,uBACA,SAAC,KAAD,UAAcU,OAIjBE,IACC,UAACZ,EAAD,YACE,SAAC,KAAD,sBACA,SAAC,KAAD,UAAcY,OAIjBC,IACC,UAACb,EAAD,YACE,SAAC,KAAD,wBACA,SAAC,KAAD,UAAca,WAKpB,UAACX,EAAD,YACE,SAACkB,EAAA,EAAD,CAAgBC,SAAUP,EAAKQ,qBA3CV,SAACC,GAC5BjB,GAASkB,EAAAA,EAAAA,IAAWhB,EAAIM,EAAMS,QA4CxB,UAAC,KAAD,kBAAaR,MACb,UAAC,IAAD,CAAQtB,KAAK,YAAYC,QA1CZ,WACnBY,GAASmB,EAAAA,EAAAA,IAAejB,KAyClB,WACE,SAAC,IAAD,CAAiBkB,KAAMC,EAAAA,MADzB,sBCjEGC,EAAoBtC,EAAAA,GAAAA,IAAH,8NAWjBuC,EAAmBvC,EAAAA,GAAAA,IAAH,wMAKKO,EAAAA,EAAAA,QAOrBiC,EAAoBxC,EAAAA,GAAAA,IAAH,qRAQxByC,EAAAA,GAIA3B,EAAAA,GCON,EAxCa,SAAC,GAAmC,IAAD,IAAhC4B,KAAQA,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,UACtB1C,GAAWC,EAAAA,EAAAA,MAEjB,OACE,+BACE,UAACoC,EAAD,YACE,UAACC,EAAD,YACE,SAAC,EAAAK,GAAD,wBACCF,GAAQA,EAAKG,OAAS,IACrB,SAAC,IAAD,CACEC,UAAU,eACV3C,KAAK,UACLC,QAAS,kBAAMH,EAAS,cAH1B,qCAUHyC,GAAQA,EAAKG,OAAS,GACrB,gCACGH,EAAKK,KAAI,SAAChC,GAAD,OACR,SAAC,EAAD,CAA0BA,KAAMA,GAAjBA,EAAKI,UAEtB,UAACqB,EAAD,YACE,SAAC,KAAD,yBACA,SAAC,KAAD,wBAAgBG,MAChB,SAAC,IAAD,CAAQxC,KAAK,UAAUC,QAAS,kBAAMH,EAAS,cAA/C,yCAMJ,SAAC,EAAD,UC/BV,EANiB,WACf,IAAMyC,GAAOM,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMP,QAE1C,OAAO,SAAC,EAAD,CAAMA,KAAMA,M,oECLRQ,E,QAA+BlD,GAAAA,IAAH,sH,2BCqBzC,EAnBuB,SAAC,GAA4C,IAAD,IAAzC+B,SAAAA,OAAyC,MAA9B,EAA8B,EAA3BC,EAA2B,EAA3BA,qBACtC,OACE,UAACkB,EAAD,YACE,SAAC,IAAD,CACE9C,QAAS,kBAAM4B,GAAsB,IACrC7B,KAAK,UACLgD,QAAM,EACNC,SAAuB,IAAbrB,EAJZ,gBAQA,SAAC,KAAD,UAAcA,KACd,SAAC,IAAD,CAAQ3B,QAAS,kBAAM4B,EAAqB,IAAI7B,KAAK,UAAUgD,QAAM,EAArE","sources":["components/shared/NoCartItems/NoCartItems.styles.js","components/shared/NoCartItems/NoCartItems.js","components/CartPage/CartItem/CartItem.styles.js","components/CartPage/CartItem/CartItem.js","components/CartPage/Cart/Cart.styles.js","components/CartPage/Cart/Cart.js","components/CartPage/CartPage.js","components/shared/QuantityPicker/QuantityPicker.styles.js","components/shared/QuantityPicker/QuantityPicker.js"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledNoItemsWrapper = styled.div`\r\n  width: 640px;\r\n  height: 200px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n","import { Link, useNavigate } from \"react-router-dom\";\r\nimport { Button } from \"../../../styles/buttonStyles\";\r\nimport { StyledParagraph } from \"../../../styles/fontStyles\";\r\nimport { StyledNoItemsWrapper } from \"./NoCartItems.styles\";\r\n\r\nconst NoCartItems = () => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <StyledNoItemsWrapper>\r\n      <StyledParagraph>You have no items in your cart.</StyledParagraph>\r\n      <Button type=\"primary\" onClick={() => navigate(\"/\")}>\r\n        Continue Shopping\r\n      </Button>\r\n    </StyledNoItemsWrapper>\r\n  );\r\n};\r\n\r\nexport default NoCartItems;\r\n","import styled from \"styled-components\";\r\nimport mediaSizes from \"../../../styles/media\";\r\n\r\nimport { SpanGrey, SpanPrice } from \"../../../styles/fontStyles\";\r\nimport { Button } from \"../../../styles/buttonStyles\";\r\n\r\nexport const StyledCartItemWrapper = styled.div`\r\n  width: 100%;\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const StyledCartItemImage = styled.img`\r\n  width: 120px;\r\n  border-radius: var(--border-radius);\r\n  margin-right: 15px;\r\n\r\n  @media screen and (min-width: ${mediaSizes.large}) {\r\n    margin-right: 30px;\r\n  }\r\n`;\r\n\r\nexport const StyledCartItemContentWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  @media screen and (min-width: ${mediaSizes.large}) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const StyledCartItemInfoWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const StyledCartItemInfoGroup = styled.div`\r\n  display: flex;\r\n\r\n  & ${SpanGrey} {\r\n    margin-right: 10px;\r\n  }\r\n\r\n  &:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nexport const StyledCartButtonsWrapper = styled.div`\r\n  margin-top: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  & > *:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  @media screen and (min-width: ${mediaSizes.large}) {\r\n    margin-top: 0;\r\n    margin-left: auto;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    & > *:not(:last-child) {\r\n      margin-bottom: 0;\r\n      margin-right: 40px;\r\n    }\r\n  }\r\n\r\n  & ${SpanPrice} {\r\n    margin-top: 20px;\r\n    align-self: flex-end;\r\n\r\n    @media screen and (min-width: ${mediaSizes.large}) {\r\n      margin-top: 0;\r\n      align-self: auto;\r\n    }\r\n  }\r\n\r\n  & ${Button} {\r\n    align-self: flex-end;\r\n\r\n    @media screen and (min-width: ${mediaSizes.large}) {\r\n      align-self: auto;\r\n    }\r\n  }\r\n`;\r\n","import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport QuantityPicker from \"../../shared/QuantityPicker/QuantityPicker\";\r\n\r\nimport {\r\n  StyledCartButtonsWrapper,\r\n  StyledCartItemContentWrapper,\r\n  StyledCartItemImage,\r\n  StyledCartItemInfoGroup,\r\n  StyledCartItemInfoWrapper,\r\n  StyledCartItemWrapper,\r\n} from \"./CartItem.styles\";\r\nimport { H3, SpanGrey, SpanPrice, SpanRegular } from \"../../../styles/fontStyles\";\r\n\r\nimport { Button } from \"../../../styles/buttonStyles\";\r\nimport { removeFromCart, updateCart } from \"../../../actions/cartActions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst CartItem = ({ item }) => {\r\n  const dispatch = useDispatch();\r\n  const { id, name, brand, imageUrl, size, color, qty, total } = item;\r\n\r\n  const handleQuantityChange = (value) => {\r\n    dispatch(updateCart(id, qty + value));\r\n  };\r\n\r\n  const handleRemove = () => {\r\n    dispatch(removeFromCart(id));\r\n  };\r\n\r\n  return (\r\n    <StyledCartItemWrapper>\r\n      <Link to={`/product/${id}`}>\r\n        <StyledCartItemImage src={imageUrl} alt={name} />\r\n      </Link>\r\n\r\n      <StyledCartItemContentWrapper>\r\n        <StyledCartItemInfoWrapper>\r\n          <Link to={`/product/${id}`}>\r\n            <H3>{name}</H3>\r\n          </Link>\r\n\r\n          {brand && (\r\n            <StyledCartItemInfoGroup>\r\n              <SpanGrey>Brand: </SpanGrey>\r\n              <SpanRegular>{brand}</SpanRegular>\r\n            </StyledCartItemInfoGroup>\r\n          )}\r\n\r\n          {size && (\r\n            <StyledCartItemInfoGroup>\r\n              <SpanGrey>Size: </SpanGrey>\r\n              <SpanRegular>{size}</SpanRegular>\r\n            </StyledCartItemInfoGroup>\r\n          )}\r\n\r\n          {color && (\r\n            <StyledCartItemInfoGroup>\r\n              <SpanGrey>Colour: </SpanGrey>\r\n              <SpanRegular>{color}</SpanRegular>\r\n            </StyledCartItemInfoGroup>\r\n          )}\r\n        </StyledCartItemInfoWrapper>\r\n\r\n        <StyledCartButtonsWrapper>\r\n          <QuantityPicker quantity={qty} handleQuantityChange={handleQuantityChange} />\r\n\r\n          <SpanPrice>Â£{total}</SpanPrice>\r\n          <Button type=\"secondary\" onClick={handleRemove}>\r\n            <FontAwesomeIcon icon={faTrashAlt} />\r\n            Remove\r\n          </Button>\r\n        </StyledCartButtonsWrapper>\r\n      </StyledCartItemContentWrapper>\r\n    </StyledCartItemWrapper>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import styled from \"styled-components\";\r\nimport mediaSizes from \"../../../styles/media\";\r\n\r\nimport { Button } from \"../../../styles/buttonStyles\";\r\nimport { SpanBold } from \"../../../styles/fontStyles\";\r\n\r\nexport const StyledCartWrapper = styled.div`\r\n  width: 100%;\r\n  padding: 20px;\r\n  margin-bottom: 40px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: white;\r\n  border: var(--borders);\r\n  box-shadow: var(--box-shadow-small);\r\n`;\r\n\r\nexport const StyledCartHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  @media screen and (min-width: ${mediaSizes.tablet}) {\r\n    & .mobileHidden {\r\n      display: block;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledCartSummary = styled.div`\r\n  width: 220px;\r\n  display: flex;\r\n  margin-top: 40px;\r\n  flex-wrap: wrap;\r\n  align-items: baseline;\r\n  align-self: flex-end;\r\n\r\n  & ${SpanBold} {\r\n    margin-right: auto;\r\n  }\r\n\r\n  & ${Button} {\r\n    width: 100%;\r\n    text-align: center;\r\n    margin-top: 10px;\r\n  }\r\n`;\r\n","import { useNavigate } from \"react-router-dom\";\r\nimport NoCartItems from \"../../shared/NoCartItems/NoCartItems\";\r\nimport CartItem from \"../CartItem/CartItem\";\r\n\r\nimport { H2, SpanBold, SpanPrice } from \"../../../styles/fontStyles\";\r\nimport { StyledCartWrapper, StyledCartHeader, StyledCartSummary } from \"./Cart.styles\";\r\nimport { Button } from \"../../../styles/buttonStyles\";\r\n\r\nconst Cart = ({ cart: { cart, cartTotal } }) => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <>\r\n      <StyledCartWrapper>\r\n        <StyledCartHeader>\r\n          <H2>Your Cart</H2>\r\n          {cart && cart.length > 3 && (\r\n            <Button\r\n              className=\"mobileHidden\"\r\n              type=\"primary\"\r\n              onClick={() => navigate(\"/checkout\")}\r\n            >\r\n              Continue to Checkout\r\n            </Button>\r\n          )}\r\n        </StyledCartHeader>\r\n\r\n        {cart && cart.length > 0 ? (\r\n          <>\r\n            {cart.map((item) => (\r\n              <CartItem key={item.name} item={item} />\r\n            ))}\r\n            <StyledCartSummary>\r\n              <SpanBold>Subtotal:</SpanBold>\r\n              <SpanPrice>{`Â£${cartTotal}`}</SpanPrice>\r\n              <Button type=\"primary\" onClick={() => navigate(\"/checkout\")}>\r\n                Continue to Checkout\r\n              </Button>\r\n            </StyledCartSummary>\r\n          </>\r\n        ) : (\r\n          <NoCartItems />\r\n        )}\r\n      </StyledCartWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import { useSelector } from \"react-redux\";\r\n\r\nimport Cart from \"./Cart/Cart\";\r\n\r\nconst CartPage = () => {\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  return <Cart cart={cart} />;\r\n};\r\n\r\nexport default CartPage;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledQuantityButtonsWrapper = styled.div`\r\n  width: 100px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n","import { StyledQuantityButtonsWrapper } from \"./QuantityPicker.styles\";\r\nimport { Button } from \"../../../styles/buttonStyles\";\r\nimport { SpanRegular } from \"../../../styles/fontStyles\";\r\n\r\nconst QuantityPicker = ({ quantity = 1, handleQuantityChange }) => {\r\n  return (\r\n    <StyledQuantityButtonsWrapper>\r\n      <Button\r\n        onClick={() => handleQuantityChange(-1)}\r\n        type=\"primary\"\r\n        $small\r\n        disabled={quantity === 1}\r\n      >\r\n        -\r\n      </Button>\r\n      <SpanRegular>{quantity}</SpanRegular>\r\n      <Button onClick={() => handleQuantityChange(1)} type=\"primary\" $small>\r\n        +\r\n      </Button>\r\n    </StyledQuantityButtonsWrapper>\r\n  );\r\n};\r\n\r\nexport default QuantityPicker;\r\n"],"names":["StyledNoItemsWrapper","styled","navigate","useNavigate","type","onClick","StyledCartItemWrapper","StyledCartItemImage","mediaSizes","StyledCartItemContentWrapper","StyledCartItemInfoWrapper","StyledCartItemInfoGroup","SpanGrey","StyledCartButtonsWrapper","SpanPrice","Button","item","dispatch","useDispatch","id","name","brand","imageUrl","size","color","qty","total","to","src","alt","H3","QuantityPicker","quantity","handleQuantityChange","value","updateCart","removeFromCart","icon","faTrashAlt","StyledCartWrapper","StyledCartHeader","StyledCartSummary","SpanBold","cart","cartTotal","H2","length","className","map","useSelector","state","StyledQuantityButtonsWrapper","$small","disabled"],"sourceRoot":""}