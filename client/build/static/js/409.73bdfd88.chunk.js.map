{"version":3,"file":"static/js/409.73bdfd88.chunk.js","mappings":"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","sources":["components/ProductPage/AddToCart/AddToCart.styles.js","components/ProductPage/AddToCart/AddToCart.js","components/ProductPage/ProductDetails/ProductDetails.styles.js","components/ProductPage/ProductDetails/ProductDetails.js","components/ProductPage/ProductPage.js","components/shared/QuantityPicker/QuantityPicker.styles.js","components/shared/QuantityPicker/QuantityPicker.js"],"sourcesContent":["import styled from \"styled-components\";\r\nimport { Button } from \"../../../styles/buttonStyles\";\r\nimport mediaSizes from \"../../../styles/media\";\r\n\r\nexport const StyledAddToCartWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const StyledQuantityTotalWrapper = styled.div`\r\n  margin-bottom: 40px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const StyledQuantityWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const StyledQuantityButtonsWrapper = styled.div`\r\n  width: 100px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nexport const StyledTotalWrapper = styled.div`\r\n  width: 100px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const StyledPurchaseButtonsWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  & ${Button} {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  @media screen and (min-width: ${mediaSizes.tablet}) {\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport {\r\n  StyledAddToCartWrapper,\r\n  StyledPurchaseButtonsWrapper,\r\n  StyledQuantityWrapper,\r\n  StyledQuantityTotalWrapper,\r\n  StyledTotalWrapper,\r\n} from \"./AddToCart.styles\";\r\nimport { Button } from \"../../../styles/buttonStyles\";\r\nimport { H3, SpanPrice } from \"../../../styles/fontStyles\";\r\nimport QuantityPicker from \"../../shared/QuantityPicker/QuantityPicker\";\r\n\r\nconst AddToCart = ({ product, addToCart }) => {\r\n  const [quantity, setQuantity] = useState(1);\r\n  const { _id, brand, color, imageUrl, name, price, size, stockQty } = product;\r\n\r\n  const handleQuantityChange = (value) => {\r\n    setQuantity((prev) => prev + value);\r\n  };\r\n\r\n  const handleAddToCart = () => {\r\n    const itemToAdd = {\r\n      id: _id,\r\n      brand,\r\n      color,\r\n      imageUrl,\r\n      name,\r\n      price,\r\n      qty: quantity,\r\n      size,\r\n    };\r\n\r\n    addToCart(itemToAdd);\r\n  };\r\n\r\n  return (\r\n    <StyledAddToCartWrapper>\r\n      <StyledQuantityTotalWrapper>\r\n        <StyledQuantityWrapper>\r\n          <H3>Quantity:</H3>\r\n          <QuantityPicker\r\n            quantity={quantity}\r\n            handleQuantityChange={handleQuantityChange}\r\n          />\r\n        </StyledQuantityWrapper>\r\n\r\n        <StyledTotalWrapper>\r\n          <H3>Total:</H3>\r\n          <SpanPrice>£{(quantity * price).toFixed(2)}</SpanPrice>\r\n        </StyledTotalWrapper>\r\n      </StyledQuantityTotalWrapper>\r\n\r\n      <StyledPurchaseButtonsWrapper>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={handleAddToCart}\r\n          disabled={stockQty === 0 || quantity > stockQty}\r\n          $large\r\n        >\r\n          Add to Cart\r\n        </Button>\r\n        <Button type=\"secondary\" $large>\r\n          <FontAwesomeIcon icon={faHeart} size=\"lg\" />\r\n          Save to Wishlist\r\n        </Button>\r\n      </StyledPurchaseButtonsWrapper>\r\n    </StyledAddToCartWrapper>\r\n  );\r\n};\r\n\r\nexport default AddToCart;\r\n","import styled from \"styled-components\";\r\nimport mediaSizes from \"../../../styles/media\";\r\n\r\nimport { SpanPrice } from \"../../../styles/fontStyles\";\r\n\r\nexport const StyledProductBackground = styled.div`\r\n  width: 100%;\r\n  padding: 20px;\r\n  background-color: white;\r\n  border: var(--borders);\r\n  box-shadow: var(--box-shadow-small);\r\n`;\r\n\r\nexport const StyledProductMainInfoWrapper = styled.div`\r\n  width: 100%;\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  @media screen and (min-width: ${mediaSizes.large}) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const StyledProductMainInfo = styled.div`\r\n  width: 100%;\r\n  max-width: 380px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: wrap;\r\n\r\n  @media screen and (min-width: ${mediaSizes.large}) {\r\n    padding-left: 20px;\r\n  }\r\n`;\r\n\r\nexport const StyledProductTitle = styled.div`\r\n  width: 100%;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const StyledProductMainInfoText = styled.div`\r\n  width: 100%;\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const StyledProductInfoGroup = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n\r\n  & ${SpanPrice} {\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nexport const StyledProductImageWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  @media screen and (min-width: ${mediaSizes.large}) {\r\n    width: 600px;\r\n    height: 350px;\r\n  }\r\n`;\r\n\r\nexport const StyledProductImage = styled.img`\r\n  width: 100%;\r\n\r\n  @media screen and (min-width: ${mediaSizes.med}) {\r\n    width: unset;\r\n    height: 350px;\r\n  }\r\n`;\r\n\r\nexport const StyledProductMoreInfo = styled.div`\r\n  display: flex;\r\n`;\r\n","import AddToCart from \"../AddToCart/AddToCart\";\r\n\r\nimport {\r\n  H2,\r\n  H3,\r\n  SpanDescription,\r\n  SpanPrice,\r\n  SpanRegular,\r\n  SpanStock,\r\n} from \"../../../styles/fontStyles\";\r\nimport {\r\n  StyledProductBackground,\r\n  StyledProductImage,\r\n  StyledProductImageWrapper,\r\n  StyledProductInfoGroup,\r\n  StyledProductMainInfo,\r\n  StyledProductMainInfoText,\r\n  StyledProductMainInfoWrapper,\r\n  StyledProductMoreInfo,\r\n  StyledProductTitle,\r\n} from \"./ProductDetails.styles\";\r\n\r\nconst ProductDetails = ({ product, addToCart }) => {\r\n  const { _id, name, price, brand, size, color, description, imageUrl, stockQty } =\r\n    product;\r\n\r\n  return (\r\n    <StyledProductBackground>\r\n      <StyledProductMainInfoWrapper>\r\n        <StyledProductImageWrapper>\r\n          <StyledProductImage src={imageUrl} alt={name} />\r\n        </StyledProductImageWrapper>\r\n\r\n        <StyledProductMainInfo>\r\n          <StyledProductTitle>\r\n            <StyledProductInfoGroup>\r\n              <H2>{name}</H2>\r\n              <SpanPrice>£{`${price}`}</SpanPrice>\r\n              <SpanStock inStock={stockQty > 0}>\r\n                {\" \"}\r\n                {stockQty > 0 ? \"In Stock\" : \"Out of Stock\"}\r\n              </SpanStock>\r\n            </StyledProductInfoGroup>\r\n          </StyledProductTitle>\r\n\r\n          <StyledProductMainInfoText>\r\n            {brand && (\r\n              <StyledProductInfoGroup>\r\n                <H3>Brand:</H3>\r\n                <SpanRegular>{brand}</SpanRegular>\r\n              </StyledProductInfoGroup>\r\n            )}\r\n\r\n            {size && (\r\n              <StyledProductInfoGroup>\r\n                <H3>Size:</H3>\r\n                <SpanRegular>{size}</SpanRegular>\r\n              </StyledProductInfoGroup>\r\n            )}\r\n\r\n            {color && (\r\n              <StyledProductInfoGroup>\r\n                <H3>Colour:</H3>\r\n                <SpanRegular>{color}</SpanRegular>\r\n              </StyledProductInfoGroup>\r\n            )}\r\n          </StyledProductMainInfoText>\r\n          <AddToCart product={product} addToCart={addToCart} />\r\n        </StyledProductMainInfo>\r\n      </StyledProductMainInfoWrapper>\r\n\r\n      <StyledProductMoreInfo>\r\n        <StyledProductInfoGroup>\r\n          <H3>Description:</H3>\r\n          <SpanDescription>{description}</SpanDescription>\r\n        </StyledProductInfoGroup>\r\n      </StyledProductMoreInfo>\r\n    </StyledProductBackground>\r\n  );\r\n};\r\n\r\nexport default ProductDetails;\r\n","import { useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { loadProductDetails } from \"../../actions/productActions\";\r\nimport { addToCart } from \"../../actions/cartActions\";\r\n\r\nimport ProductDetails from \"./ProductDetails/ProductDetails\";\r\nimport Spinner from \"../shared/Spinner/Spinner\";\r\n\r\nconst ProductPage = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const { id } = params;\r\n\r\n  useEffect(() => {\r\n    dispatch(loadProductDetails(id));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (error) navigate(\"/\");\r\n  }, [error]);\r\n\r\n  const handleAddToCart = (item) => {\r\n    dispatch(addToCart(item));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <ProductDetails product={product} addToCart={handleAddToCart} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductPage;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledQuantityButtonsWrapper = styled.div`\r\n  width: 100px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n","import { StyledQuantityButtonsWrapper } from \"./QuantityPicker.styles\";\r\nimport { Button } from \"../../../styles/buttonStyles\";\r\nimport { SpanRegular } from \"../../../styles/fontStyles\";\r\n\r\nconst QuantityPicker = ({ quantity = 1, handleQuantityChange }) => {\r\n  return (\r\n    <StyledQuantityButtonsWrapper>\r\n      <Button\r\n        onClick={() => handleQuantityChange(-1)}\r\n        type=\"primary\"\r\n        $small\r\n        disabled={quantity === 1}\r\n      >\r\n        -\r\n      </Button>\r\n      <SpanRegular>{quantity}</SpanRegular>\r\n      <Button onClick={() => handleQuantityChange(1)} type=\"primary\" $small>\r\n        +\r\n      </Button>\r\n    </StyledQuantityButtonsWrapper>\r\n  );\r\n};\r\n\r\nexport default QuantityPicker;\r\n"],"names":["StyledAddToCartWrapper","styled","StyledQuantityTotalWrapper","StyledQuantityWrapper","StyledTotalWrapper","StyledPurchaseButtonsWrapper","Button","mediaSizes","product","addToCart","useState","quantity","setQuantity","_id","brand","color","imageUrl","name","price","size","stockQty","H3","QuantityPicker","handleQuantityChange","value","prev","toFixed","type","onClick","id","qty","disabled","$large","icon","faHeart","StyledProductBackground","StyledProductMainInfoWrapper","StyledProductMainInfo","StyledProductTitle","StyledProductMainInfoText","StyledProductInfoGroup","SpanPrice","StyledProductImageWrapper","StyledProductImage","StyledProductMoreInfo","description","src","alt","H2","inStock","navigate","useNavigate","dispatch","useDispatch","params","useParams","productDetails","useSelector","state","loading","error","useEffect","loadProductDetails","Spinner","item","StyledQuantityButtonsWrapper","$small"],"sourceRoot":""}