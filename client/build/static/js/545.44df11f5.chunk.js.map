{"version":3,"file":"static/js/545.44df11f5.chunk.js","mappings":"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","sources":["components/CheckoutPage/OrderSummaryItem/OrderSummaryItem.styles.js","components/CheckoutPage/OrderSummaryItem/OrderSummaryItem.js","components/CheckoutPage/OrderSummary/OrderSummary.styles.js","components/CheckoutPage/OrderSummary/OrderSummary.js","components/CheckoutPage/CheckoutForm/CheckoutForm.styles.js","components/CheckoutPage/CheckoutForm/CheckoutForm.js","components/CheckoutPage/Checkout.styles.js","components/CheckoutPage/CheckoutPage.js"],"sourcesContent":["import styled from \"styled-components\";\r\nimport { SpanBold, SpanPrice, SpanRegular } from \"../../../styles/fontStyles\";\r\n\r\nexport const StyledOrderSummaryItemWrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  padding: 20px 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  &:not(:last-child) {\r\n    border-bottom: var(--borders);\r\n  }\r\n\r\n  & ${SpanBold}, & ${SpanRegular} {\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  & ${SpanPrice} {\r\n    position: absolute;\r\n    bottom: 20px;\r\n    right: 0;\r\n    align-self: flex-end;\r\n    font-size: 20px;\r\n  }\r\n`;\r\n","import { SpanBold, SpanPrice, SpanRegular } from \"../../../styles/fontStyles\";\r\nimport { StyledOrderSummaryItemWrapper } from \"./OrderSummaryItem.styles\";\r\n\r\nconst OrderSummaryItem = ({ item: { name, brand, qty, price, total } }) => {\r\n  return (\r\n    <StyledOrderSummaryItemWrapper>\r\n      <SpanBold>{name}</SpanBold>\r\n      <SpanRegular>{brand}</SpanRegular>\r\n      <SpanRegular>{`£${price} x ${qty}`}</SpanRegular>\r\n      <SpanPrice>£{total}</SpanPrice>\r\n    </StyledOrderSummaryItemWrapper>\r\n  );\r\n};\r\n\r\nexport default OrderSummaryItem;\r\n","import styled from \"styled-components\";\r\nimport mediaSizes from \"../../../styles/media\";\r\n\r\nexport const StyledOrderSummaryWrapper = styled.div`\r\n  width: 100%;\r\n  margin-bottom: 20px;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: white;\r\n  border: var(--borders);\r\n  box-shadow: var(--box-shadow-small);\r\n\r\n  @media screen and (min-width: ${mediaSizes.large}) {\r\n    width: calc(30% - 10px);\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nexport const StyledOrderSummaryTotalWrapper = styled.div`\r\n  padding: 20px 0;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: baseline;\r\n`;\r\n","import { H3, SpanBold, SpanPrice } from \"../../../styles/fontStyles\";\r\nimport OrderSummaryItem from \"../OrderSummaryItem/OrderSummaryItem\";\r\nimport {\r\n  StyledOrderSummaryTotalWrapper,\r\n  StyledOrderSummaryWrapper,\r\n} from \"./OrderSummary.styles\";\r\n\r\nconst OrderSummary = ({ cart, cartTotal }) => {\r\n  return (\r\n    <StyledOrderSummaryWrapper>\r\n      <H3>Order Summary:</H3>\r\n      {cart.map((item) => (\r\n        <OrderSummaryItem key={item.name} item={item} />\r\n      ))}\r\n      <StyledOrderSummaryTotalWrapper>\r\n        <SpanBold>Total:</SpanBold>\r\n        <SpanPrice>£{cartTotal}</SpanPrice>\r\n      </StyledOrderSummaryTotalWrapper>\r\n    </StyledOrderSummaryWrapper>\r\n  );\r\n};\r\n\r\nexport default OrderSummary;\r\n","import styled from \"styled-components\";\r\nimport mediaSizes from \"../../../styles/media\";\r\n\r\nimport { Button } from \"../../../styles/buttonStyles\";\r\n\r\nexport const StyledCheckoutFormWrapper = styled.div`\r\n  width: 100%;\r\n  padding: 20px;\r\n  background-color: white;\r\n  border: var(--borders);\r\n  box-shadow: var(--box-shadow-small);\r\n\r\n  @media screen and (min-width: ${mediaSizes.large}) {\r\n    width: calc(70% - 10px);\r\n  }\r\n\r\n  & ${Button} {\r\n    margin: 20px 0;\r\n  }\r\n`;\r\n","import { useState } from \"react\";\r\nimport { useStripe, useElements, PaymentElement } from \"@stripe/react-stripe-js\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { Button } from \"../../../styles/buttonStyles\";\r\nimport { SpanError } from \"../../../styles/fontStyles\";\r\nimport {\r\n  StyledInput,\r\n  StyledInputGroup,\r\n  StyledInputsFlexWrapper,\r\n  StyledLabel,\r\n} from \"../../../styles/formStyles\";\r\nimport { StyledCheckoutFormWrapper } from \"./CheckoutForm.styles\";\r\n\r\nconst CheckoutForm = ({ total }) => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const doSubmit = async (formData) => {\r\n    const { firstName, lastName, address1, address2, city, state, postalCode } = formData;\r\n\r\n    if (!stripe || !elements) {\r\n      return;\r\n    }\r\n\r\n    setError(\"\");\r\n    setLoading(true);\r\n\r\n    const result = await stripe.confirmPayment({\r\n      elements,\r\n      confirmParams: {\r\n        return_url: \"http://localhost:3000/confirmation?paymentStatus=success\",\r\n        shipping: {\r\n          name: `${firstName} ${lastName}`,\r\n          address: {\r\n            line1: address1,\r\n            line2: address2,\r\n            city,\r\n            state,\r\n            postal_code: postalCode,\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n    setLoading(false);\r\n\r\n    if (result.error.type === \"card_error\" || result.error.type === \"validation_error\") {\r\n      setError(result.error.message);\r\n    } else {\r\n      setError(\"An unexpected error has occurred.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledCheckoutFormWrapper>\r\n      <form onSubmit={handleSubmit(doSubmit)}>\r\n        <StyledInputsFlexWrapper>\r\n          <StyledInputGroup>\r\n            <StyledLabel htmlFor=\"firstName\">First Name</StyledLabel>\r\n            <StyledInput\r\n              type=\"text\"\r\n              id=\"firstName\"\r\n              {...register(\"firstName\", { required: true, minLength: 2 })}\r\n            />\r\n            {errors.firstName && (\r\n              <SpanError>This field requires at least 2 characters.</SpanError>\r\n            )}\r\n          </StyledInputGroup>\r\n\r\n          <StyledInputGroup>\r\n            <StyledLabel htmlFor=\"lastName\">Last Name</StyledLabel>\r\n            <StyledInput\r\n              type=\"text\"\r\n              id=\"lastName\"\r\n              {...register(\"lastName\", { required: true, minLength: 2 })}\r\n            />\r\n            {errors.lastName && (\r\n              <SpanError>This field requires at least 2 characters.</SpanError>\r\n            )}\r\n          </StyledInputGroup>\r\n        </StyledInputsFlexWrapper>\r\n\r\n        <StyledInputGroup>\r\n          <StyledLabel htmlFor=\"address1\">Address Line 1</StyledLabel>\r\n          <StyledInput\r\n            type=\"text\"\r\n            id=\"address1\"\r\n            {...register(\"address1\", { required: true })}\r\n          />\r\n          {errors.address1 && <SpanError>This field is required.</SpanError>}\r\n        </StyledInputGroup>\r\n\r\n        <StyledInputGroup>\r\n          <StyledLabel htmlFor=\"address2\">Address Line 2</StyledLabel>\r\n          <StyledInput type=\"text\" id=\"address2\" {...register(\"address2\")} />\r\n          {errors.address2 && <SpanError>This field is required.</SpanError>}\r\n        </StyledInputGroup>\r\n\r\n        <StyledInputGroup>\r\n          <StyledLabel htmlFor=\"city\">City</StyledLabel>\r\n          <StyledInput type=\"text\" id=\"city\" {...register(\"city\", { required: true })} />\r\n          {errors.city && <SpanError>This field is required.</SpanError>}\r\n        </StyledInputGroup>\r\n\r\n        <StyledInputGroup>\r\n          <StyledLabel htmlFor=\"state\">County</StyledLabel>\r\n          <StyledInput type=\"text\" id=\"state\" {...register(\"state\")} />\r\n        </StyledInputGroup>\r\n\r\n        <StyledInputGroup>\r\n          <StyledLabel htmlFor=\"postalCode\">Postal Code</StyledLabel>\r\n          <StyledInput\r\n            type=\"text\"\r\n            id=\"postalCode\"\r\n            {...register(\"postalCode\", { required: true })}\r\n          />\r\n          {errors.postalCode && <SpanError>This field is required.</SpanError>}\r\n        </StyledInputGroup>\r\n\r\n        <PaymentElement />\r\n        {stripe && elements && (\r\n          <>\r\n            <Button type=\"primary\" $large disabled={loading}>\r\n              {loading ? (\r\n                <>\r\n                  <FontAwesomeIcon icon={faSpinner} size=\"lg\" spin /> Processing...\r\n                </>\r\n              ) : (\r\n                `Pay £${total / 100}`\r\n              )}\r\n            </Button>\r\n          </>\r\n        )}\r\n        {error && <SpanError staticPosition>{error}</SpanError>}\r\n      </form>\r\n    </StyledCheckoutFormWrapper>\r\n  );\r\n};\r\n\r\nexport default CheckoutForm;\r\n","import styled from \"styled-components\";\r\nimport mediaSizes from \"../../styles/media\";\r\n\r\nexport const StyledCheckoutWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column-reverse;\r\n  align-items: flex-start;\r\n\r\n  @media screen and (min-width: ${mediaSizes.large}) {\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\n\r\nimport OrderSummary from \"./OrderSummary/OrderSummary\";\r\nimport CheckoutForm from \"./CheckoutForm/CheckoutForm\";\r\nimport Spinner from \"../shared/Spinner/Spinner\";\r\nimport { StyledCheckoutWrapper } from \"./Checkout.styles\";\r\n\r\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY);\r\n\r\nconst CheckoutPage = () => {\r\n  const { cart, cartTotal } = useSelector((state) => state.cart);\r\n  const { user } = useSelector((state) => state.auth);\r\n  const [clientSecret, setClientSecret] = useState(\"\");\r\n  const [total, setTotal] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (!cart) return;\r\n    if (!user) return;\r\n\r\n    const items = {};\r\n\r\n    cart.forEach((item) => (items[item.id] = { qty: item.qty, total: item.total }));\r\n\r\n    const createPaymentIntent = async () => {\r\n      const { data } = await axios.post(\"/api/payment/create-intent\", { items, user });\r\n      setClientSecret(data.clientSecret);\r\n      setTotal(data.total);\r\n    };\r\n    createPaymentIntent();\r\n  }, [cart, user]);\r\n\r\n  const appearance = {\r\n    variables: {\r\n      borderRadius: \"5px\",\r\n      fontFamily: \"Poppins, sans-serif\",\r\n    },\r\n    rules: {\r\n      \".Input\": {\r\n        border: \"1px solid #eee\",\r\n        borderRadius: \"var(--borderRadius)\",\r\n      },\r\n      \".Label\": {\r\n        fontWeight: \"700\",\r\n        marginBottom: \"10px\",\r\n        color: \"#111\",\r\n        fontSize: \"16px\",\r\n      },\r\n      \".Error\": {\r\n        fontSize: \"12px\",\r\n        color: \"#dc143c\",\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <StyledCheckoutWrapper>\r\n      {!clientSecret ? (\r\n        <Spinner />\r\n      ) : (\r\n        <>\r\n          <Elements\r\n            stripe={stripePromise}\r\n            options={{\r\n              clientSecret,\r\n              appearance,\r\n              fonts: [\r\n                {\r\n                  cssSrc: \"https://fonts.googleapis.com/css2?family=Poppins:wght@400;700\",\r\n                },\r\n              ],\r\n              loader: \"always\",\r\n            }}\r\n          >\r\n            <CheckoutForm total={total} />\r\n          </Elements>\r\n          <OrderSummary cart={cart} cartTotal={cartTotal} />\r\n        </>\r\n      )}\r\n    </StyledCheckoutWrapper>\r\n  );\r\n};\r\n\r\nexport default CheckoutPage;\r\n"],"names":["StyledOrderSummaryItemWrapper","styled","SpanBold","SpanRegular","SpanPrice","item","name","brand","qty","price","total","StyledOrderSummaryWrapper","mediaSizes","StyledOrderSummaryTotalWrapper","cart","cartTotal","H3","map","StyledCheckoutFormWrapper","Button","stripe","useStripe","elements","useElements","useForm","register","handleSubmit","errors","formState","useState","loading","setLoading","error","setError","doSubmit","formData","firstName","lastName","address1","address2","city","state","postalCode","confirmPayment","confirmParams","return_url","shipping","address","line1","line2","postal_code","result","type","message","onSubmit","htmlFor","id","required","minLength","PaymentElement","$large","disabled","icon","faSpinner","size","spin","staticPosition","StyledCheckoutWrapper","stripePromise","loadStripe","process","useSelector","user","auth","clientSecret","setClientSecret","setTotal","useEffect","items","forEach","createPaymentIntent","axios","data","Elements","options","appearance","variables","borderRadius","fontFamily","rules","border","fontWeight","marginBottom","color","fontSize","fonts","cssSrc","loader","Spinner"],"sourceRoot":""}